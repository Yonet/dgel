const VERTEX_VARIABLES =
/*glsl*/
`
#ifdef NORMALS
in vec3 aVertexNormal;
out vec3 vNormal;
#endif
`;
const VERTEX_MAIN =
/*glsl*/
`
#ifdef NORMALS
vNormal = uNormalMatrix * aVertexNormal;
#endif
`;
const FRAGMENT_VARIABLES =
/*glsl*/
`
#ifdef NORMALS
in vec3 vNormal;
#endif
`;
const FRAGMENT_MAIN =
/*glsl*/
`
#ifdef NORMALS
  #ifdef FLAT_SHADED
    vec3 fdx = vec3(dFdx(vViewPosition.x), dFdx(vViewPosition.y), dFdx(vViewPosition.z));
    vec3 fdy = vec3(dFdy(vViewPosition.x), dFdy(vViewPosition.y), dFdy(vViewPosition.z));
    vec3 normal = normalize(cross(fdx, fdy));
  #else
    vec3 normal = normalize(vNormal);
    #ifdef DOUBLE_SIDED
      normal = normal * (float(gl_FrontFacing) * 2.0 - 1.0);
    #endif
  #endif
#endif
`;
export default {
  VERTEX_VARIABLES,
  VERTEX_MAIN,
  FRAGMENT_VARIABLES,
  FRAGMENT_MAIN
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zaGFkZXJzL2dlb21ldHJ5L25vcm1hbHMuZ2xzbC50cyJdLCJuYW1lcyI6WyJWRVJURVhfVkFSSUFCTEVTIiwiVkVSVEVYX01BSU4iLCJGUkFHTUVOVF9WQVJJQUJMRVMiLCJGUkFHTUVOVF9NQUlOIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxnQkFBZ0I7QUFBRztBQUFVOzs7OztDQUFuQztBQU9BLE1BQU1DLFdBQVc7QUFBRztBQUFVOzs7O0NBQTlCO0FBTUEsTUFBTUMsa0JBQWtCO0FBQUc7QUFBVTs7OztDQUFyQztBQU1BLE1BQU1DLGFBQWE7QUFBRztBQUFVOzs7Ozs7Ozs7Ozs7O0NBQWhDO0FBZUEsZUFBZTtBQUNiSCxFQUFBQSxnQkFEYTtBQUViQyxFQUFBQSxXQUZhO0FBR2JDLEVBQUFBLGtCQUhhO0FBSWJDLEVBQUFBO0FBSmEsQ0FBZiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFZFUlRFWF9WQVJJQUJMRVMgPSAvKmdsc2wqLyBgXG4jaWZkZWYgTk9STUFMU1xuaW4gdmVjMyBhVmVydGV4Tm9ybWFsO1xub3V0IHZlYzMgdk5vcm1hbDtcbiNlbmRpZlxuYDtcblxuY29uc3QgVkVSVEVYX01BSU4gPSAvKmdsc2wqLyBgXG4jaWZkZWYgTk9STUFMU1xudk5vcm1hbCA9IHVOb3JtYWxNYXRyaXggKiBhVmVydGV4Tm9ybWFsO1xuI2VuZGlmXG5gO1xuXG5jb25zdCBGUkFHTUVOVF9WQVJJQUJMRVMgPSAvKmdsc2wqLyBgXG4jaWZkZWYgTk9STUFMU1xuaW4gdmVjMyB2Tm9ybWFsO1xuI2VuZGlmXG5gO1xuXG5jb25zdCBGUkFHTUVOVF9NQUlOID0gLypnbHNsKi8gYFxuI2lmZGVmIE5PUk1BTFNcbiAgI2lmZGVmIEZMQVRfU0hBREVEXG4gICAgdmVjMyBmZHggPSB2ZWMzKGRGZHgodlZpZXdQb3NpdGlvbi54KSwgZEZkeCh2Vmlld1Bvc2l0aW9uLnkpLCBkRmR4KHZWaWV3UG9zaXRpb24ueikpO1xuICAgIHZlYzMgZmR5ID0gdmVjMyhkRmR5KHZWaWV3UG9zaXRpb24ueCksIGRGZHkodlZpZXdQb3NpdGlvbi55KSwgZEZkeSh2Vmlld1Bvc2l0aW9uLnopKTtcbiAgICB2ZWMzIG5vcm1hbCA9IG5vcm1hbGl6ZShjcm9zcyhmZHgsIGZkeSkpO1xuICAjZWxzZVxuICAgIHZlYzMgbm9ybWFsID0gbm9ybWFsaXplKHZOb3JtYWwpO1xuICAgICNpZmRlZiBET1VCTEVfU0lERURcbiAgICAgIG5vcm1hbCA9IG5vcm1hbCAqIChmbG9hdChnbF9Gcm9udEZhY2luZykgKiAyLjAgLSAxLjApO1xuICAgICNlbmRpZlxuICAjZW5kaWZcbiNlbmRpZlxuYDtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBWRVJURVhfVkFSSUFCTEVTLFxuICBWRVJURVhfTUFJTixcbiAgRlJBR01FTlRfVkFSSUFCTEVTLFxuICBGUkFHTUVOVF9NQUlOLFxufTtcbiJdfQ==